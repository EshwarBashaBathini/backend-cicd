version: 2.1

jobs:
  build:
    docker:
      - image: circleci/openjdk:17-jdk  # Use OpenJDK 17 Docker image to build the Java project
    steps:
      - checkout  # Checkout the code from the GitHub repository
      - run:
          name: Build with Maven
          command: mvn clean package  # Build the application with Maven (generate a .jar or .war)

  deploy:
    docker:
      - image: mcr.microsoft.com/azure-cli  # Use Azure CLI Docker image for deployment
    steps:
      - checkout  # Checkout the code from the GitHub repository
      - run:
          name: Install Azure CLI
          command: |
            curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash  # Install Azure CLI (if needed)
      - run:
          name: Log in to Azure
          command: |
            az login --service-principal -u $AZURE_CLIENT_ID -p $AZURE_CLIENT_SECRET --tenant $AZURE_TENANT_ID  # Login to Azure using Service Principal
      - run:
          name: Deploy to Azure App Service
          command: |
            az webapp deploy --resource-group eshwar --name middle-ware --src-path target/ems-backend-0.0.1-SNAPSHOT.jar  # Deploy the .jar or .war file to Azure App Service

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build  # Run the build job first
      - deploy:
          requires:
            - build  # Deploy after the build job is successful
          filters:
            branches:
              only:
                - main  # Only deploy on push to the 'main' branch
