version: 2.1

jobs:
  build:
    docker:
      - image: circleci/openjdk:17-buster-node-browsers-legacy
    steps:
      - checkout
      - run:
          name: Add Google Chrome Public Key
          command: |
            curl -sSL https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
            sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 32EE5355A6BC6E42
      - run:
          name: Resolve GPG Key Issue for Google Chrome Repository
          command: |
            sudo apt-get update
            sudo apt-get install -y wget gnupg
            echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
            sudo apt-get update
      - run:
          name: Build with Maven
          command: mvn clean package

  deploy:
    docker:
      - image: circleci/openjdk:17-buster-node-browsers-legacy
    steps:
      - checkout
      - run:
          name: Add Google Chrome Public Key
          command: |
            curl -sSL https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
            sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 32EE5355A6BC6E42
      - run:
          name: Resolve GPG Key Issue for Google Chrome Repository
          command: |
            sudo apt-get update
            sudo apt-get install -y wget gnupg
            echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
            sudo apt-get update
      - run:
          name: Install Azure CLI
          command: |
            sudo apt-get update
            sudo apt-get install -y curl
            curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
      - run:
          name: Log in to Azure
          command: |
            az login --service-principal -u $AZURE_CLIENT_ID -p $AZURE_CLIENT_SECRET -tenant $AZURE_TENANT_ID
      - run:
          name: Deploy to Azure App Service
          command: |
            az webapp deploy --resource-group eshwar --name eshwar-backend --src-path target/*.jar
            echo "Deployment successful"

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only:
                - main
